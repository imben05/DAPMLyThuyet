@model FlightManagement.Models.Account

@{
    ViewBag.Title = "Thông tin tài khoản";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="container">
        <h2 class="text-center">Thông Tin Tài Khoản</h2>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.accountID)

        <div class="card">
            <div class="card-body">
                <div class="form-group">
                    @Html.LabelFor(model => model.firstName, "Tên")
                    @Html.TextBoxFor(model => model.firstName, new { @class = "form-control", @placeholder = "Nhập họ của bạn", @readonly = true })
                    @Html.ValidationMessageFor(model => model.firstName, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.lastName, "Họ")
                    @Html.TextBoxFor(model => model.lastName, new { @class = "form-control", @placeholder = "Nhập tên của bạn", @readonly = true })
                    @Html.ValidationMessageFor(model => model.lastName, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.dateOfBirth, "Ngày Sinh")
                    @Html.TextBoxFor(model => model.dateOfBirth, new { @class = "form-control", @placeholder = "Nhập ngày sinh của bạn", @readonly = true })
                    @Html.ValidationMessageFor(model => model.dateOfBirth, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.address, "Địa Chỉ")
                    @Html.TextBoxFor(model => model.address, new { @class = "form-control", @placeholder = "Nhập địa chỉ của bạn", @readonly = true })
                    @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.email, "Email")
                    @Html.TextBoxFor(model => model.email, new { @class = "form-control", @placeholder = "Nhập địa chỉ email của bạn", @readonly = true })
                    @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.phone, "Số Điện Thoại")
                    @Html.TextBoxFor(model => model.phone, new { @class = "form-control", @placeholder = "Nhập số điện thoại của bạn", @readonly = true })
                    @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
                </div>

                <div class="text-center">
                    <button type="button" class="btn btn-info" onclick="enableEditing()">Sửa</button>
                    <button type="submit" class="btn btn-success" style="display:none;">Cập nhật</button>
                    <button type="cancel" onclick="@Url.Action("Details", "Login", new { id = Session["idUser"] })" class="btn btn-danger" style="display:none;">Hủy</button> <!-- Ẩn nút cập nhật -->
                </div>
            </div>
        </div>
    </div>
}
<script>
        function enableEditing() {
            // Bỏ thuộc tính readonly cho các trường
            const inputs = document.querySelectorAll('.form-control');
            inputs.forEach(input => {
                input.removeAttribute('readonly');
            });

            // Hiện nút cập nhật
            document.querySelector('.btn-success').style.display = 'inline-block';
            document.querySelector('.btn-danger').style.display = 'inline-block';
            document.querySelector('.btn-info').style.display = 'none';
        }
</script>

<style>
    body {
        font-family: 'Arial', sans-serif;
        background-color: #f4f7fa; /* Màu nền trang */
        padding: 20px; /* Padding xung quanh */
    }

    h2 {
        color: #333; /* Màu chữ cho tiêu đề */
        margin-bottom: 30px; /* Khoảng cách dưới tiêu đề */
    }

    .card {
        background-color: white; /* Màu nền cho card */
        border: 1px solid #ddd; /* Đường viền cho card */
        border-radius: 8px; /* Bo tròn các góc */
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1); /* Hiệu ứng bóng cho card */
        padding: 20px; /* Padding bên trong card */
    }

    .form-control {
        border: 1px solid #ccc; /* Đường viền cho các trường đầu vào */
        border-radius: 4px; /* Bo tròn các góc */
        padding: 10px; /* Khoảng cách bên trong trường */
        transition: border-color 0.3s; /* Hiệu ứng chuyển màu khi focus */
    }

        .form-control:focus {
            border-color: #4FD1C5; /* Màu viền khi trường được chọn */
            box-shadow: 0 0 5px rgba(79, 209, 197, 0.5); /* Hiệu ứng bóng */
        }

    .btn {
        padding: 10px 20px; /* Padding cho nút */
        font-size: 16px; /* Kích thước chữ */
        margin: 10px; /* Khoảng cách giữa các nút */
    }

    .btn-info {
        background-color: #17a2b8; /* Màu nền cho nút Sửa */
        color: white; /* Màu chữ cho nút */
    }

    .btn-success {
        background-color: #28a745; /* Màu nền cho nút Cập nhật */
        color: white; /* Màu chữ cho nút */
